// Generated by view binder compiler. Do not edit!
package com.example.chatbox.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.chatbox.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySearchBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton backBtn;

  @NonNull
  public final TextInputLayout filledTextField;

  @NonNull
  public final RelativeLayout mainToolbar;

  @NonNull
  public final ImageButton searchBtn;

  @NonNull
  public final RecyclerView searchUserRecyclerView;

  @NonNull
  public final RelativeLayout searchuser;

  @NonNull
  public final TextInputEditText usernameEdittext;

  private ActivitySearchBinding(@NonNull RelativeLayout rootView, @NonNull ImageButton backBtn,
      @NonNull TextInputLayout filledTextField, @NonNull RelativeLayout mainToolbar,
      @NonNull ImageButton searchBtn, @NonNull RecyclerView searchUserRecyclerView,
      @NonNull RelativeLayout searchuser, @NonNull TextInputEditText usernameEdittext) {
    this.rootView = rootView;
    this.backBtn = backBtn;
    this.filledTextField = filledTextField;
    this.mainToolbar = mainToolbar;
    this.searchBtn = searchBtn;
    this.searchUserRecyclerView = searchUserRecyclerView;
    this.searchuser = searchuser;
    this.usernameEdittext = usernameEdittext;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_btn;
      ImageButton backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.filledTextField;
      TextInputLayout filledTextField = ViewBindings.findChildViewById(rootView, id);
      if (filledTextField == null) {
        break missingId;
      }

      id = R.id.main_toolbar;
      RelativeLayout mainToolbar = ViewBindings.findChildViewById(rootView, id);
      if (mainToolbar == null) {
        break missingId;
      }

      id = R.id.search_btn;
      ImageButton searchBtn = ViewBindings.findChildViewById(rootView, id);
      if (searchBtn == null) {
        break missingId;
      }

      id = R.id.search_user_recycler_view;
      RecyclerView searchUserRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (searchUserRecyclerView == null) {
        break missingId;
      }

      id = R.id.searchuser;
      RelativeLayout searchuser = ViewBindings.findChildViewById(rootView, id);
      if (searchuser == null) {
        break missingId;
      }

      id = R.id.username_edittext;
      TextInputEditText usernameEdittext = ViewBindings.findChildViewById(rootView, id);
      if (usernameEdittext == null) {
        break missingId;
      }

      return new ActivitySearchBinding((RelativeLayout) rootView, backBtn, filledTextField,
          mainToolbar, searchBtn, searchUserRecyclerView, searchuser, usernameEdittext);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
